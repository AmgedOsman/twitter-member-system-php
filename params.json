{"name":"Twitter-member-system-php","tagline":"PHP Twitter Membership Based System","body":"# Twitter Member System PHP\r\nPHP Membership System using Twitter Login only\r\nThe system is based and using @Abraham's [TwitterAOuth](https://github.com/abraham/twitteroauth) \r\nThe System can be up and running in no time, very easy to install and to use.\r\n\r\n[demo here](http://amged.me/tms/)\r\n\r\n\r\nI've created it around a single registery class called `$run->functionExample();` (more on this later)\r\n##Creating Twitter Application\r\nFor this system to work you need to create [Twitter Application](https://apps.twitter.com)\r\nMake sure to setup the callback URL to the `callback.php` file in `includes` folder\r\nOnce the app is created you will be provided with \r\n* CONSUMER_KEY\r\n* CONSUMER_SECRET\r\n\r\n\r\n##Getting Started\r\nOpen the `config.php`and add the provided `CONSUMER_KEY` & `CONSUMER_SECRET` as well as your callback URL (The script won't work without it).\r\n\r\n##Setup Database\r\nNow create a new table in your database and import the below table inside it\r\nThis table is for users\r\n```\r\nCREATE TABLE IF NOT EXISTS `users` (\r\n  `id` int(25) NOT NULL AUTO_INCREMENT,\r\n  `twitter_id` int(10) unsigned NOT NULL DEFAULT '0',\r\n  `name` varchar(65) NOT NULL,\r\n  `screen_name` varchar(65) NOT NULL,\r\n  `access_data` tinytext NOT NULL,\r\n  `password` varchar(32) NOT NULL,\r\n  `profile_image_url` varchar(250) NOT NULL,\r\n  `created` int(10) NOT NULL,\r\n  `updated` int(10) NOT NULL,\r\n  `email` varchar(255) NOT NULL,\r\n  `timezone` varchar(255) NOT NULL DEFAULT 'Europe/London',\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=21 ;\r\n```\r\nAgain, in your `config.php` file fill in the database connection info\r\n```\r\n//-------------------\r\n// Database\r\n//---------------------\r\n\tdefine( 'dbhost', 'localhost' );// this will ususally be 'localhost', but can sometimes differ\r\n\tdefine( 'dbname', 'database_name' );// the name of the database that you are going to use for this project\r\n\tdefine( 'dbuser', 'user' );// the username that you created, or were given, to access your database\r\n\tdefine( 'dbpass', 'password' );// the password that you created, or were given, to access your database\r\n```\r\n\r\n##Customization and Setup\r\nNow open `settings.php` and fill in the right configuration for your script\r\n\r\nMost important one is the (the rest are all optional)\r\n\r\n`$INFO['base_url'] = 'URL_TO_SCRIPT';`\r\n\r\n##SEO Frindly with HTACCESS\r\nOnce that is done open the file `.htaccess` and again, put the correct url for the script to the error document (optional)\r\n`ErrorDocument 404 /tms/404.php`\r\nwhere `tms` is a subdirectory (you can remove it if your script runs on the root folder of the website\r\n\r\n\r\n##Explaing Some Functions\r\nTo make things easier, i've created couple of functions that calls directly to certain actions\r\n###$run\r\nBasically, my main class `classTMS` can be called using `$run->` anywhere on any page!\r\nfor example to get current user Twitter Name you can do\r\n`$run->member->name` displays `Amged`\r\n\r\n###$run->Twitter\r\nI've created a simple function to call directly for Abraham's class\r\nCall for the library\r\n`$run->getTwitter();`\r\nThen you can actually use it anywhere within your files\r\n`$run->Twitter->get();`\r\nor\r\n`$run->Twitter->post();`\r\n\r\nBasically, any function that exists on TwitterAOuth can be accessed directly with \r\n`$run->Twitter->functionName();`\r\n\r\n\r\n##Creating New Pages\r\nYou might want to create new pages for you website\r\nwith only 3 lines of codes you can have a new page ready!\r\nSimply create new file in `includes` folder, for example call it `myfile.php`\r\n\r\nThen add the below content inside it\r\n```\r\n<?php\r\nif ( ! defined( 'IN_SCRIPT' ) )\r\n{\r\n\tprint \"<h1>Incorrect access</h1>You cannot access this file directly.\";\r\n\texit();\r\n}\r\n\r\n//\r\n// Set Page Title\r\n//\r\n\t$run->setTitle('My Title');\r\n\r\n//\r\n// Set Page desc\r\n//\r\n\t$run->setDescription('Page description!');\r\n\r\n//\r\n// Load page\r\n//\r\n\t$run->buildContent( 'Output Content' );\r\n\r\n```\r\nThat's it! \r\nI've also created another way of outputting content for more customization\r\n\r\nso instead of `$run->buildContent('string here');`\r\nyou can use\r\n```\r\n//Print Header\r\n$run->headerContent();\r\n//Send output\r\n$run->addContent( $run->words['setup_text'] );\r\n//Send more content\r\n$run->addContent( 'string' );\r\n//print footer\r\n$run->footerContent();\r\n```\r\n\r\nEnjoy the script and let me know if you run into any bugs\r\n","google":"UA-74731478-1","note":"Don't delete this file! It's used internally to help with page regeneration."}